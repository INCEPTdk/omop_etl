# Stem-table mapping

-   For clinical tables containing information not relating to drugs, we will
    use a STEM table with 'simple' STEM table logic (see figure below in section
    '7.5 Table name: STEM')

    -   The STEM table will be used as an intermediate mapping table: the source
        data will first be mapped to the STEM table and the OMOP CDM tables will
        be filled from the STEM table.

    -   A semantic mapping document will be generated and then used in
        conjunction with the STEM table

    -   This 'simple' STEM table logic will apply to the following tables:
        CONDITION_OCCURENCE, PROCEDURE_OCCURENCE, DEVICE_EXPOSURE, MEASUREMENT,
        OBSERVATION, OBSERVATION_PERIOD

    -   It allows the mapping to be more data-driven

-   For clinical tables containing drug information, we will use the STEM table;
    however, the logic will differ from that described above for other clinical
    tables. Manual mappings will be included to ensure relationships between the
    source prescription table and drug look-up table can be easily referenced.

    -   Manual mapping will be needed to link the source drug data (contained
        within prescriptions) to a drug look-up table (drug_mapping_helper) and
        then the STEM table.

    -   This slightly different STEM table logic will apply to the following
        table: DRUG_EXPOSURE.

![](images/media/image2.png){fig-align="center" width="4.529166666666667in"
height="3.7756944444444445in"}

For the ETL design, it is important to note that there will be one STEM table;
however, the logic will differ between clinical tables containing drug
information and other clinical tables.

The ETL will be designed so that it can ingest files from multiple sources
(e.g., different ICUs from different hospitals).

NOTE: There is only one STEM table; however, there are two approaches included.
The first includes a 'simple' logic that will be applied to all clinical tables
except drug_exposure. Second, a slightly different logic will be used for
drug_exposure. The source tables for both are also different.

From a technical standpoint the STEM logic should include 4 main steps:

1.  create a function that creates a dictionary of all the names of fields that
    return a date in that table, with the value (=date) and the patient
    identifier.

2.  Create a function for categorical values that combines information of the
    source and the mapping file. This is the function that will need to be
    created separately for both approaches as the 'simple' structure (key and
    value) vs the 'drug' structure (combining multiple fields) combine different
    columns, and require a different value for the lookup. Once these records
    are created with all the information from the mapping file, also link it to
    the correct date using the output from the function in step 1. 

3.  Create a function for numerical values that combines information of the
    source and the mapping file. Once the join is completed also link it to the
    correct date using the output from the function in step 1. There are
    differences between how categorical and numerical values should be handled
    as they require different omop fields to be filled in (e.g.: value_as_number
    vs value_as_concept_id).

4.  Create a function that loops through all the rows in the source and performs
    the functions described in step 3 and 4 on all these value combinations.

### Reading from course_metadata, observations, diagnoses_procedures {#reading-from-course_metadata-observations-diagnoses_procedures}

NOTE: This STEM table refers to clinical events excluding drugs and will use
'simple' STEM table logic

$$video_recording.mp4$$: Part 3 - 00:01:00

For clinical tables containing information not relating to drugs, we will use a
STEM table with 'simple' STEM table logic:

-   The STEM table will be used as an intermediate mapping table: the source
    data will first be mapped to the STEM table and the OMOP CDM tables will be
    filled from the STEM table using the domain of the mapped concept_id.

-   A semantic mapping document will be generated and then used in conjunction
    with the STEM table, resulting in a data-driven approach.

-   This 'simple' STEM table logic will apply to the following tables:
    CONDITION_OCCURENCE, PROCEDURE_OCCURENCE, DEVICE_EXPOSURE, MEASUREMENT,
    OBSERVATION, OBSERVATION_PERIOD

![](images/media/image3.png){width="6.5in" height="4.40625in"}

### the list table

| Column 1                             |        Column 2        |              Column 3 | column 4 |
|:-------------------------------------|:----------------------:|----------------------:|:---------|
| A_very_long_word_that_needs_breaking | Another_very_long_word | Yet_another_long_word | hej      |

::: list-table
-

    -   Destination Field
    -   Source Field
    -   Logic
    -   Comment

-

    -   domain_id
    -   concept_lookup_stem.std_code_domain
    -
    -

-

    -   datasource
    -
    -   Add the filename from which this record is taken
    -

-

    -   stem_id
    -
    -   Auto-generated integer
    -

-

    -   person_id
    -   course_id
    -   Use course_id from course_metadata for the row and join that on the
        course_id_cpr_mapping file, find the corresponding patient_id\
        Use this patient_id (\<column_name\>\|\<column_value\> format) to join
        on the person table with the person_source_value to find the person_id\
        Use the person_id
    -

-

    -   concept_id
    -   concept_lookup_stem.mapped_standard_code
    -
    -   Use column variable' as the base and 'value' as the second component for
        categorical or numerical values \
        Lookup based on variable + '\_\_\_' + value\
        (value_type categorical)\
        Lookup based on Lookup based on variable (value_type = numerical). There
        are very few examples of composite data (e.g., pupil sizes in the left
        and right eyes, resp.), and those will be handled on a c ase-by-case
        basis.

-

    -   start_date
    -   \<concept_lookup_stem.start_date\>
    -   Use column of the name defined in the source field, cast to DATE
    -

-

    -   start_datetime
    -   \<concept_lookup_stem.start_date\>
    -   Use column of the name defined in the source field, cast to TIMESTAMPTZ
    -

-

    -   end_date
    -   \<concept_lookup_stem.end_date\>
    -   Use column of the name defined in the source field, cast to DATE
    -

-

    -   end_datetime
    -   \<concept_lookup_stem.end_date\>
    -   Use column of the name defined in the source field, cast to TIMESTAMPTZ
    -

-

    -   type_concept_id
    -   concept_lookup_stem.type_concept_id
    -
    -

-

    -   provider_id
    -
    -
    -   NULL

-

    -   visit_occurrence_id
    -   Course_id
    -   Look up in the visit_occ table by joining on the
        \<column_name\>\_\<column_value\> and the visit_source_value and then
        using the associated visit_occurrence_id
    -

-

    -   visit_detail_id
    -
    -
    -   NULL

-

    -   care_site_id
    -
    -
    -   NULL

-

    -   source_value
    -   \<variable\>\|\<value\>
    -
    -   The same structure is found across all tables. There is a variable and a
        value column and the values in these columns need to be concatenated in
        the source_value, separated by a pipe

-

    -   source_concept_id
    -   uid (mapping file)
    -
    -

-

    -   quantity_or_value_as_number
    -   value (source)
    -
    -   Used for numerical values (from observations or measurement) and
        DRUG_EXPOSURE quantity values

-

    -   value_as_string
    -   value_as_string (mapping file)
    -
    -

-

    -   value_as_concept_id
    -   value_as_concept_id (mapping file)
    -
    -   Used for value_type = 'categorical'

-

    -   unit_concept_id
    -   unit_concept_id (mapping file)
    -
    -

-

    -   value_source_value
    -   value (source)
    -
    -

-

    -   unit_source_concept_id
    -
    -
    -   NULL

-

    -   unit_source_value
    -   unit (mapping file)
    -
    -

-

    -   verbatim_end_date
    -
    -
    -   NULL

-

    -   days_supply
    -
    -
    -   NULL

-

    -   dose_unit_source_value
    -   dose_unit_source_value (mapping file)
    -
    -

-

    -   modifier_concept_id
    -   modifier_concept_id (mapping file)
    -
    -

-

    -   modifier_source_value
    -
    -
    -   NULL

-

    -   measurement_time
    -
    -
    -   NULL

-

    -   operator_concept_id
    -   operator_concept_id (mapping file)
    -
    -

-

    -   range_low
    -   range_low (mapping file)
    -
    -

-

    -   range_high
    -   range_high (mapping file)
    -
    -

-

    -   stop_reason
    -
    -
    -   NULL

-

    -   refills
    -
    -
    -   NULL

-

    -   sig
    -
    -
    -   NULL

-

    -   route_concept_id
    -   route_source_value
    -   Join with concept_lookup and use concept_id therefrom
    -

-

    -   route_source_value
    -   route_source_value
    -
    -

-

    -   lot_number
    -
    -
    -   NULL

-

    -   unique_device_id
    -
    -
    -   NULL

-

    -   production_id
    -
    -
    -   NULL

-

    -   anatomic_site_concept_id
    -
    -
    -   NULL

-

    -   disease_status_concept_id
    -
    -
    -   NULL

-

    -   specimen_source_id
    -
    -
    -   NULL

-

    -   anatomic_site_source_value
    -
    -
    -   NULL

-

    -   disease_status_source_value
    -
    -
    -   NULL

-

    -   condition_status_concept_id
    -
    -
    -   NULL

-

    -   condition_status_source_value
    -
    -
    -   NULL

-

    -   qualifier_concept_id
    -
    -
    -   NULL

-

    -   qualifier_source_value
    -
    -
    -   NULL

-

    -   event_id
    -
    -
    -   NULL

-

    -   event_field_concept_id
    -
    -
    -   NULL

-

    -   episode_id_source
    -
    -
    -   NULL
:::

### Reading from prescriptions and drug_mapping_helper_processed {#reading-from-prescriptions-and-drug_mapping_helper_processed}

NOTE: This STEM table refers only to drugs and will use the STEM table logic
with the addition of manual mappings to ensure relationships between the two
tables can easily be referenced.

For clinical tables containing drug information, we will use the STEM table;
however, the logic will differ from that described above for other clinical
tables. Manual mappings will be included to ensure relationships between the
source prescription table and drug look-up table are easily referenced.

-   The STEM table will be used as an intermediate mapping table: the source
    data will first be mapped to the STEM table and the OMOP CDM tables will be
    filled from the STEM table.

-   Manual mapping will be needed to link the source drug data (contained in
    prescriptions and administrations) to a drug look-up table (called
    drug_mapping_helper) and then to the STEM table.

-   drug_mapping_helper only contains the ATC codes and their associated
    additional information. RxNorm builder will be used to create mappings to
    best level of granularity possible, aiming for Clinical Drug (or Clinical
    Drug Component) level to enable population of the drug_era and dose_era
    tables.

-   The logic to link from the source data to drug_mapping_helper to the STEM
    table to the OMOP drug_exposure table will need to be done manually with a
    drug_key (will link prescriptions and drug_mapping_helper, epaspresbaseid
    will link administrations and prescriptions). The ETL will handle pump and
    non-pump drug data differently: drug_mapping_helper.numerator_value comes
    from administrations.value for non-pump drug data and from
    prescriptions.epaspresconc for pump drug data

-   This slightly different STEM table logic will apply to the following table:
    DRUG_EXPOSURE.

![A diagram of a drug exposure Description automatically
generated](images/media/image4.jpg){width="6.5in" height="4.398611111111111in"}
